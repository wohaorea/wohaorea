<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>el-upload组件报TypeError Cannot create property ‘uid‘ on string错误及解决方法</title>
    <url>/2023/02/28/el-upload%E7%BB%84%E4%BB%B6%E6%8A%A5TypeError%20Cannot%20create%20property%20%E2%80%98uid%E2%80%98%20on%20string%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>记录一个element组件的el-upload组件的一个小坑</p>
<p>今天发现使用el-upload上传文件,上传没有问题,点详情看文件时就会报一个错误,错误如下:<br>TypeError: Cannot create property ‘uid’ on string ‘<a class="link"   href="https://xxxx.com/upload/20230506/1683346602758.png" >https://xxxx.com/upload/20230506/1683346602758.png <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>‘</p>
<p>组件代码的模板代码如下:</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-upload</span> <span class="attr">:limit</span>=<span class="string">&quot;5&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;pattern == &#x27;detail&#x27;&quot;</span> <span class="attr">:show-file-list</span>=<span class="string">&quot;true&quot;</span> <span class="attr">multiple</span> <span class="attr">accept</span>=<span class="string">&quot;image/jpeg,image/png&quot;</span> <span class="attr">:action</span>=<span class="string">&quot;uploadAction&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:headers</span>=<span class="string">&quot;headers&quot;</span> <span class="attr">:on-success</span>=<span class="string">&quot;onUploadSuccess&quot;</span> <span class="attr">:on-error</span>=<span class="string">&quot;onError&quot;</span> <span class="attr">:before-upload</span>=<span class="string">&quot;beforeAvatarUpload&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">style</span>=<span class="string">&quot;float: left;margin-left:0;&quot;</span> <span class="attr">:file-list</span>=<span class="string">&quot;dataForm.img_url&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;uploading ? &#x27;el-icon-loading&#x27; : &#x27;el-icon-plus&#x27;&quot;</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>由于后台返回的dataForm.img_url是字符串用”,”分割,然后我就在获取到地址时手动给它转成数组[],代码如下:</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">dataForm</span>.<span class="property">img_url</span> = data.<span class="property">data</span>.<span class="property">img_url</span> ? data.<span class="property">data</span>.<span class="property">img_url</span>.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>) : [];</span><br></pre></td></tr></table></figure></div>

<p>结果还是报上面那个错误,我这时就有点纳闷了,然后查了下文档<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/miaosu.jpg"
                      alt="在这里插入图片描述"
                ><br>看完恍然大悟,需要的是对象数组,代码改如下:</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">dataForm</span>.<span class="property">img_url</span> = data.<span class="property">data</span>.<span class="property">img_url</span> ? data.<span class="property">data</span>.<span class="property">img_url</span>.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>).<span class="title function_">map</span>(<span class="function"><span class="params">url</span> =&gt;</span>&#123;<span class="keyword">return</span> &#123;url&#125;&#125;) : [];</span><br></pre></td></tr></table></figure></div>

<p>完美解决,撒花!!!</p>
<p>纯记录,大佬勿喷</p>
]]></content>
      <categories>
        <category>踩坑日记</category>
      </categories>
      <tags>
        <tag>vue项目</tag>
      </tags>
  </entry>
  <entry>
    <title>js实现两个异步请求，要求前一个请求完成，拿前一个请求的结果，请求下一个数据。</title>
    <url>/2021/03/28/js%E5%AE%9E%E7%8E%B0%E4%B8%A4%E4%B8%AA%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82%EF%BC%8C%E8%A6%81%E6%B1%82%E5%89%8D%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E5%AE%8C%E6%88%90%EF%BC%8C%E6%8B%BF%E5%89%8D%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E7%9A%84%E7%BB%93%E6%9E%9C%EF%BC%8C%E8%AF%B7%E6%B1%82%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E3%80%82/</url>
    <content><![CDATA[<h3 id="记录一下今天上班实战开发实现的一个功能：有两个异步请求，要求前面一个请求完成，拿前一个请求的结果-请求下一条数据。"><a href="#记录一下今天上班实战开发实现的一个功能：有两个异步请求，要求前面一个请求完成，拿前一个请求的结果-请求下一条数据。" class="headerlink" title="记录一下今天上班实战开发实现的一个功能：有两个异步请求，要求前面一个请求完成，拿前一个请求的结果,请求下一条数据。"></a>记录一下今天上班实战开发实现的一个功能：有两个异步请求，要求前面一个请求完成，拿前一个请求的结果,请求下一条数据。</h3><h3 id="旨在记录，有不足之处请多多指教。废话不多说，开撸！"><a href="#旨在记录，有不足之处请多多指教。废话不多说，开撸！" class="headerlink" title="旨在记录，有不足之处请多多指教。废话不多说，开撸！"></a>旨在记录，有不足之处请多多指教。废话不多说，开撸！</h3><h3 id="第一种思路：使用-async-await-语法来让两个异步请求有先后顺序执行"><a href="#第一种思路：使用-async-await-语法来让两个异步请求有先后顺序执行" class="headerlink" title="第一种思路：使用 async&#x2F;await 语法来让两个异步请求有先后顺序执行"></a>第一种思路：使用 async&#x2F;await 语法来让两个异步请求有先后顺序执行</h3><p>例如：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 发送第一个请求，获取 id</span></span><br><span class="line">  <span class="keyword">const</span> res1 = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">get</span>(<span class="string">&#x27;/api/get-id&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> id = res1.<span class="property">data</span>.<span class="property">id</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 使用 id 发送第二个请求</span></span><br><span class="line">  <span class="keyword">const</span> res2 = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">get</span>(<span class="string">`/api/get-data?id=<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res2.<span class="property">data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>在这个示例中，我们首先使用 await 关键字来等待第一个请求的响应。然后，我们获取响应数据中的 id，并使用这个 id 发送第二个请求。还可以在执行异步代码的函数中使用 try&#x2F;catch 语句来捕获&#x2F;处理错误。</p>
<p>但是，如果两个请求都写在不同的函数里面，在这个函数里面来请求其他函数的结果，再进行别的操作，就往往会出现，第一个函数的结果还没有收到，下一条请求就完成的现象。<br>例如以下代码：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getData1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 发送第一个请求，获取 id</span></span><br><span class="line">  <span class="keyword">const</span> res1 = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">get</span>(<span class="string">&#x27;/api/get-id&#x27;</span>);</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">id</span> = res1.<span class="property">data</span>.<span class="property">id</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">getData2</span>(<span class="params"></span>) &#123;</span><br><span class="line">	<span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">getData1</span>()</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">id</span>) <span class="comment">//此时的id就有可能为undefined；</span></span><br><span class="line">  <span class="comment">// 使用 id 发送第二个请求</span></span><br><span class="line">  <span class="keyword">const</span> res2 = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">get</span>(<span class="string">`/api/get-data?id=<span class="subst">$&#123;<span class="variable language_">this</span>.id&#125;</span>`</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res2.<span class="property">data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>那要怎么解决这种情况呢？我就想到了第二种思路。</p>
<h3 id="第二种思路：使用-Promise-then-来让两个异步请求有先后顺序执行"><a href="#第二种思路：使用-Promise-then-来让两个异步请求有先后顺序执行" class="headerlink" title="第二种思路：使用 Promise.then()来让两个异步请求有先后顺序执行"></a>第二种思路：使用 Promise.then()来让两个异步请求有先后顺序执行</h3><p>实现代码如下：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">getData1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 发送第一个请求，获取 id</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">get</span>(<span class="string">&#x27;/api/get-id&#x27;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">id</span> = data.<span class="property">id</span>;</span><br><span class="line">        <span class="title function_">resolve</span>();</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">msg</span>);</span><br><span class="line">        <span class="title function_">reject</span>(err.<span class="property">msg</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getData2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getData1</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">id</span>) <span class="comment">//此时的id就会正常出来；</span></span><br><span class="line">    <span class="comment">// 使用 id 发送第二个请求</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">get</span>(<span class="string">`/api/get-data?id=<span class="subst">$&#123;<span class="variable language_">this</span>.id&#125;</span>`</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err2</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(err2.<span class="property">msg</span>);</span><br><span class="line">      <span class="title function_">reject</span>(err2.<span class="property">msg</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">msg</span>);</span><br><span class="line">    <span class="title function_">reject</span>(err.<span class="property">msg</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这个思路主要是使用 Promise 来保证 getData1 函数的执行顺序。首先需要将 getData1 函数修改为返回一个 Promise 对象。在调用 getData1 的时候，使用 .then() 方法来执行后续操作。如果 执行出错，则会执行 .catch() 中的函数，可以在这个函数中进行错误处理。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/zan.jpg"
                      alt="赞！"
                ><br>处理完毕！！！撒花！！</p>
]]></content>
      <categories>
        <category>功能实现</category>
      </categories>
      <tags>
        <tag>js运用</tag>
      </tags>
  </entry>
  <entry>
    <title>js实现超最大范围的数相加之和</title>
    <url>/2021/01/15/js%E5%AE%9E%E7%8E%B0%E8%B6%85%E6%9C%80%E5%A4%A7%E8%8C%83%E5%9B%B4%E7%9A%84%E6%95%B0%E7%9B%B8%E5%8A%A0%E4%B9%8B%E5%92%8C/</url>
    <content><![CDATA[<h3 id="记录一下今天上班实战开发实现的一个功能：用js实现超最大范围的数相加之和。"><a href="#记录一下今天上班实战开发实现的一个功能：用js实现超最大范围的数相加之和。" class="headerlink" title="记录一下今天上班实战开发实现的一个功能：用js实现超最大范围的数相加之和。"></a>记录一下今天上班实战开发实现的一个功能：用js实现超最大范围的数相加之和。</h3><h3 id="旨在记录，有不足之处请多多指教。废话不多说，开撸！"><a href="#旨在记录，有不足之处请多多指教。废话不多说，开撸！" class="headerlink" title="旨在记录，有不足之处请多多指教。废话不多说，开撸！"></a>旨在记录，有不足之处请多多指教。废话不多说，开撸！</h3><h2 id="在最大安全整数范围内求和的方法有很多很多，这里不多赘述。这里提供几个思路，求超过最大安全范围内之和。"><a href="#在最大安全整数范围内求和的方法有很多很多，这里不多赘述。这里提供几个思路，求超过最大安全范围内之和。" class="headerlink" title="在最大安全整数范围内求和的方法有很多很多，这里不多赘述。这里提供几个思路，求超过最大安全范围内之和。"></a>在最大安全整数范围内求和的方法有很多很多，这里不多赘述。这里提供几个思路，求超过最大安全范围内之和。</h2><p>这里要求，传入两个字符串（因为字符串没有限制）返回它们之和。</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; <span class="variable">a</span></span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; <span class="variable">b</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">sum</span> (a, b) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="第一种：使用-JavaScript-的内置对象-BigInt-。"><a href="#第一种：使用-JavaScript-的内置对象-BigInt-。" class="headerlink" title="第一种：使用 JavaScript 的内置对象 BigInt 。"></a>第一种：使用 JavaScript 的内置对象 BigInt 。</h2><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; <span class="variable">a</span></span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; <span class="variable">b</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="title class_">BigInt</span>(a) + <span class="title class_">BigInt</span>(b)).<span class="title function_">toString</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">sum</span>(<span class="string">&#x27;7865454534122121521220121121212&#x27;</span>, <span class="string">&#x27;62323234122121521220121121212&#x27;</span>)) <span class="comment">// &#x27;7927777768244243042440242242424&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p>这种方法是最简单易用的，在开发过程中最常见，下面分享一种面试题常见做法，不用BigInt怎么实现。</p>
<h2 id="第二种：使用字符串模拟”竖式”加法的方式实现这个函数。"><a href="#第二种：使用字符串模拟”竖式”加法的方式实现这个函数。" class="headerlink" title="第二种：使用字符串模拟”竖式”加法的方式实现这个函数。"></a>第二种：使用字符串模拟”竖式”加法的方式实现这个函数。</h2><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; <span class="variable">a</span></span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; <span class="variable">b</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">let</span> carry = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将字符串反转并转换为数组，方便模拟竖式加法</span></span><br><span class="line">  a = a.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>();</span><br><span class="line">  b = b.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 从低位到高位遍历两个数组</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="title class_">Math</span>.<span class="title function_">max</span>(a.<span class="property">length</span>, b.<span class="property">length</span>); i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> x = a[i] ? <span class="built_in">parseInt</span>(a[i]) : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> y = b[i] ? <span class="built_in">parseInt</span>(b[i]) : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> sum = x + y + carry;</span><br><span class="line">    carry = sum &gt;= <span class="number">10</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    result += sum % <span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (carry) &#123;</span><br><span class="line">    result += carry;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将结果反转回去</span></span><br><span class="line">  <span class="keyword">return</span> result.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这个函数首先将两个字符串反转并转换为数组，然后从低位到高位遍历两个数组，模拟竖式加法的过程。最后再将结果反转回去。</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="string">&#x27;7865454534122121521220121121212&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&#x27;62323234122121521220121121212&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">sum</span>(a, b));  <span class="comment">// &#x27;848877786534433273333223324242424&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p><strong>注意</strong>：<em>这个函数有一个不足的地方，只能处理非负数相加, 如果需要支持负数相加需要进行特殊处理</em><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/sqbbjd.jpg"
                      alt="注意点"
                ></p>
<h4 id="如果有负数相加可以怎么做"><a href="#如果有负数相加可以怎么做" class="headerlink" title="如果有负数相加可以怎么做?"></a>如果有负数相加可以怎么做?</h4><p>如果需要支持负数相加，需要对函数进行一些改动。<br>首先，在输入的时候需要判断字符串是否为负数，并将其转化为绝对值。<br>其次，在计算结果之前需要判断两个数的正负性，如果有一个为负数，则结果为负数。<br>最后，在输出结果之前需要再次判断结果是否为负数，如果是则在结果前加上负号。<br>代码如下：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; <span class="variable">a</span></span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; <span class="variable">b</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> isNegative = (a[<span class="number">0</span>] === <span class="string">&#x27;-&#x27;</span> &amp;&amp; b[<span class="number">0</span>] !== <span class="string">&#x27;-&#x27;</span>) || (b[<span class="number">0</span>] === <span class="string">&#x27;-&#x27;</span> &amp;&amp; a[<span class="number">0</span>] !== <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    a = a[<span class="number">0</span>] === <span class="string">&#x27;-&#x27;</span> ? a.<span class="title function_">substring</span>(<span class="number">1</span>) : a;</span><br><span class="line">    b = b[<span class="number">0</span>] === <span class="string">&#x27;-&#x27;</span> ? b.<span class="title function_">substring</span>(<span class="number">1</span>) : b;</span><br><span class="line">    a = a.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    b = b.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> carry = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> res = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="title class_">Math</span>.<span class="title function_">max</span>(a.<span class="property">length</span>, b.<span class="property">length</span>) || carry; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> x = (a[i] | <span class="number">0</span>) + (b[i] | <span class="number">0</span>) + carry;</span><br><span class="line">        <span class="keyword">if</span> (isNegative) &#123;</span><br><span class="line">            x = (a[i] | <span class="number">0</span>) - (b[i] | <span class="number">0</span>) - carry;</span><br><span class="line">            <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                carry = <span class="number">1</span>;</span><br><span class="line">                x += <span class="number">10</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                carry = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            carry = x &gt;= <span class="number">10</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">            x -= carry * <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        res += x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isNegative) &#123;</span><br><span class="line">        res += <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">sum</span>(<span class="string">&#x27;7865454534122121521220121121212&#x27;</span>, <span class="string">&#x27;-29562332323232323232489653&#x27;</span>)) <span class="comment">//48932212098699888779715687977659</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">sum</span>(<span class="string">&#x27;-7865454534122121521220121121212&#x27;</span>, <span class="string">&#x27;-29562332323232323232489653&#x27;</span>)) <span class="comment">//7865484096454444753543353610865</span></span><br></pre></td></tr></table></figure></div>

<p>ok 结束！！！<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/wink.jpg"
                      alt="wink"
                ></p>
]]></content>
      <categories>
        <category>功能实现</category>
      </categories>
      <tags>
        <tag>js运用</tag>
      </tags>
  </entry>
  <entry>
    <title>vue项目使用html2canvas库实现网页截屏的功能</title>
    <url>/2022/11/15/vue%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8html2canvas%E5%BA%93%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E6%88%AA%E5%B1%8F%E7%9A%84%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p><strong>记录一下vue项目使用html2canvas库实现网页截屏的功能，减少以后引用少走弯路。旨在记录，不足之处请多多指教。</strong></p>
<h1 id="1、安装html2canvas库"><a href="#1、安装html2canvas库" class="headerlink" title="1、安装html2canvas库"></a>1、安装html2canvas库</h1><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install html2canvas --save</span><br></pre></td></tr></table></figure></div>
<h1 id="2、在需要截图的Vue组件中引入html2canvas库："><a href="#2、在需要截图的Vue组件中引入html2canvas库：" class="headerlink" title="2、在需要截图的Vue组件中引入html2canvas库："></a>2、在需要截图的Vue组件中引入html2canvas库：</h1><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> html2canvas <span class="keyword">from</span> <span class="string">&#x27;html2canvas&#x27;</span></span><br></pre></td></tr></table></figure></div>
<h1 id="3、实现截图功能"><a href="#3、实现截图功能" class="headerlink" title="3、实现截图功能"></a>3、实现截图功能</h1><p>在需要截图的HTML结构部分添加一个 canvas 元素，给它一个class&#x2F;ref&#x2F;id都可，待会要能获取到DOM节点：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;capture&quot;</span>&gt;</span>截图<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 需要截图的部分 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    ...</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></div>
<p>自己定义一个方法，使用html2canvas库将需要截图的元素转换为Canvas，并将生成的图片绘制到canvas元素上：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用 html2canvas 库将需要截图的元素转换为 Canvas，</span></span><br><span class="line"><span class="comment">// 并将生成的图片绘制到 canvas 元素上</span></span><br><span class="line"><span class="title function_">capture</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取需要截图的元素，这里选择了canvas部分</span></span><br><span class="line">  <span class="keyword">const</span> targetElement = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.canvas&#x27;</span>);</span><br><span class="line">  <span class="comment">// 使用html2canvas生成截图，并将结果保存到变量screenshot中</span></span><br><span class="line">  <span class="title function_">html2canvas</span>(targetElement, &#123;</span><br><span class="line">    <span class="attr">useCORS</span>: <span class="literal">true</span>, <span class="comment">// 使用跨域资源共享(CORS)</span></span><br><span class="line"> <span class="attr">scrollX</span>: <span class="number">0</span>, <span class="comment">// 截图时x轴滚动条的位置</span></span><br><span class="line"> <span class="attr">scrollY</span>: -<span class="variable language_">window</span>.<span class="property">scrollY</span> <span class="comment">// 截图时y轴滚动条的位置</span></span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">canvas</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 将截图转为png格式的base64编码，并保存到screenshot变量中</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">screenshot</span> = canvas.<span class="title function_">toDataURL</span>(<span class="string">&#x27;image/png&#x27;</span>);</span><br><span class="line">    <span class="comment">// 将截图转为blob对象，并保存到screenshotBlob变量中</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">screenshotBlob</span> = canvas.<span class="title function_">toBlob</span>(<span class="function">(<span class="params">blob</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">screenshotBlob</span>=blob;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">upload</span>()<span class="comment">//这里将截图转为blob对象，并保存到screenshotBlob变量中，并通过回调函数在控制台输出blob对象并上传至服务器</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></div>

<p><strong>注意：</strong>需要把截图上传至服务器需要将截图转为blob对象，并把请求头以下类型加上</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;multipart/form-data;&#x27;</span>&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="4、-效果图："><a href="#4、-效果图：" class="headerlink" title="4、 效果图："></a>4、 效果图：</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/html2canvas.jpg"
                      alt="html2canvas截图"
                ></p>
]]></content>
      <categories>
        <category>功能实现</category>
      </categories>
      <tags>
        <tag>vue项目</tag>
      </tags>
  </entry>
  <entry>
    <title>vue项目引入百度地图BMapGL和BMap实例，以及辅助工具BMapGLLib 的引入，BMapGL鼠标绘制功能</title>
    <url>/2022/09/28/vue%E9%A1%B9%E7%9B%AE%E5%BC%95%E5%85%A5%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEBMapGL%E5%92%8CBMap%E5%AE%9E%E4%BE%8B%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7BMapGLLib%20%E7%9A%84%E5%BC%95%E5%85%A5%EF%BC%8CBMapGL%E9%BC%A0%E6%A0%87%E7%BB%98%E5%88%B6%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h4 id="记录一下vue项目使用百度地图所用的api和踩过的坑，减少以后引用少走弯路。旨在记录，第一次开贴，不足之处请多多指教。废话不多说，开撸！"><a href="#记录一下vue项目使用百度地图所用的api和踩过的坑，减少以后引用少走弯路。旨在记录，第一次开贴，不足之处请多多指教。废话不多说，开撸！" class="headerlink" title="记录一下vue项目使用百度地图所用的api和踩过的坑，减少以后引用少走弯路。旨在记录，第一次开贴，不足之处请多多指教。废话不多说，开撸！"></a>记录一下vue项目使用百度地图所用的api和踩过的坑，减少以后引用少走弯路。旨在记录，第一次开贴，不足之处请多多指教。废话不多说，开撸！</h4><h2 id="1、引用百度地图"><a href="#1、引用百度地图" class="headerlink" title="1、引用百度地图"></a>1、引用百度地图</h2><p>这里账号密钥不多说，上<a class="link"   href="https://lbsyun.baidu.com/index.php?title=jspopularGL/guide/getkey" >链接 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，自己注册。</p>
<p>首先要在你项目的index.html里面加上以下代码：<br>这个是BMap</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;//api.map.baidu.com/api?v=3.0&amp;ak=您的密钥&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>

<p>这个是BMapGL</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;//api.map.baidu.com/api?type=webgl&amp;v=1.0&amp;ak=您的密钥&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>
<p>如果需要使用辅助工具BMapGLLib ，还得把以下两个也放入</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;link href=<span class="string">&quot;//mapopen.cdn.bcebos.com/github/BMapGLLib/DrawingManager/src/DrawingManager.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//mapopen.cdn.bcebos.com/github/BMapGLLib/DrawingManager/src/DrawingManager.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div>

<h2 id="2、在项目中使用百度地图"><a href="#2、在项目中使用百度地图" class="headerlink" title="2、在项目中使用百度地图"></a>2、在项目中使用百度地图</h2><h3 id="2-1、页面结构部分"><a href="#2-1、页面结构部分" class="headerlink" title="2-1、页面结构部分"></a>2-1、页面结构部分</h3><p>（1）创建地图容器元素</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;map-body&quot;</span> :id=<span class="string">&quot;mapId&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div>
<p>（2）设置容器样式大小</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">.<span class="property">map</span>-body &#123;</span><br><span class="line">  <span class="attr">position</span>: relative;</span><br><span class="line">  <span class="attr">height</span>: 500px;</span><br><span class="line">  <span class="attr">border</span>: 1px solid #dcdfe6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="2-2、js逻辑部分"><a href="#2-2、js逻辑部分" class="headerlink" title="2-2、js逻辑部分"></a>2-2、js逻辑部分</h3><p>（1）创建地图实例</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">createMap</span>(<span class="params">lgt, lat</span>) &#123;</span><br><span class="line">      <span class="comment">// this.maploading=true;</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">map</span> = <span class="keyword">new</span> <span class="title class_">BMapGL</span>.<span class="title class_">Map</span>(<span class="variable language_">this</span>.<span class="property">mapId</span>, &#123; <span class="attr">enableMapClick</span>: <span class="literal">false</span> &#125;) <span class="comment">// 创建Map实例,GL版命名空间为BMapGL(鼠标右键控制倾斜角度)</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">centerAndZoom</span>(<span class="keyword">new</span> <span class="title class_">BMapGL</span>.<span class="title class_">Point</span>(lgt, lat), <span class="number">11</span>)      <span class="comment">// 初始化地图,设置中心点坐标和地图级别</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">enableScrollWheelZoom</span>(<span class="literal">true</span>)<span class="comment">// 开启鼠标滚轮缩放</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure></div>
<p>（2）把地图赋值给全局变量，方便后续使用</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">  <span class="attr">map</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">mapId</span>: <span class="string">&quot;&quot;</span>, <span class="comment">//我这里采用了动态id这个不是必须的，看自己需求来</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">mapId</span> = <span class="string">&#x27;map&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br></pre></td></tr></table></figure></div>
<p>（3）设置中心点坐标<br>这里我们使用BMapGL命名空间下的Point类来创建一个坐标点。Point类描述了一个地理坐标点，其中116.404表示经度，39.915表示纬度。（为天安门坐标）</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> point = <span class="keyword">new</span> <span class="title class_">BMapGL</span>.<span class="title class_">Point</span>(<span class="number">116.404</span>, <span class="number">39.915</span>);</span><br></pre></td></tr></table></figure></div>
<p><strong>注意：</strong><br>在使用百度地图JavaScript API服务时，需使用百度BD09坐标，如使用其他坐标（ WGS84、GCJ02）进行展示，需先将其他坐标转换为BD09，详细说明请参考坐标转换说明，请勿使用非官方的转换方法。</p>
<p>（4）地图初始化</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">mapId</span> = <span class="string">&#x27;map&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">  <span class="keyword">const</span> point = <span class="keyword">new</span> <span class="title class_">BMapGL</span>.<span class="title class_">Point</span>(<span class="number">116.404</span>, <span class="number">39.915</span>);</span><br><span class="line">  <span class="comment">//创建地图</span></span><br><span class="line">  <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">createMap</span>(point.<span class="property">lng</span>, point.<span class="property">lat</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></div>
<p>到现在为止，百度地图就在你页面上创建成功了。<br>附图片：<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/sl1.jpg"
                      alt="vue引入百度地图BMap"
                ></p>
<h2 id="3、在项目中使用百度地图辅助工具BMapGLLib"><a href="#3、在项目中使用百度地图辅助工具BMapGLLib" class="headerlink" title="3、在项目中使用百度地图辅助工具BMapGLLib"></a>3、在项目中使用百度地图辅助工具BMapGLLib</h2><p>现在的需求就是需要在页面上标注点，画矩形，圆形的一些标注线。百度地图的辅助工具就刚好自带了这两个功能。</p>
<h3 id="3-1、页面结构部分"><a href="#3-1、页面结构部分" class="headerlink" title="3-1、页面结构部分"></a>3-1、页面结构部分</h3><p>（1）辅助工具栏html结构和css样式</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;ul <span class="keyword">class</span>=<span class="string">&quot;drawing-panel&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;bmap-btn bmap-marker&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;draw(&#x27;marker&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:style</span>=<span class="string">&quot;&#123; &#x27;background-position-y&#x27;: actNav === &#x27;marker&#x27; ? &#x27;-52px&#x27; : &#x27;0px&#x27; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;bmap-btn bmap-polyline&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;draw(&#x27;polyline&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:style</span>=<span class="string">&quot;&#123; &#x27;background-position-y&#x27;: actNav === &#x27;polyline&#x27; ? &#x27;-52px&#x27; : &#x27;0px&#x27; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;bmap-btn bmap-rectangle&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;draw(&#x27;rectangle&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:style</span>=<span class="string">&quot;&#123; &#x27;background-position-y&#x27;: actNav === &#x27;rectangle&#x27; ? &#x27;-52px&#x27; : &#x27;0px&#x27; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;bmap-btn bmap-polygon&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;draw(&#x27;polygon&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:style</span>=<span class="string">&quot;&#123; &#x27;background-position-y&#x27;: actNav === &#x27;polygon&#x27; ? &#x27;-52px&#x27; : &#x27;0px&#x27; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;bmap-btn bmap-circle&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;draw(&#x27;circle&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:style</span>=<span class="string">&quot;&#123; &#x27;background-position-y&#x27;: actNav === &#x27;circle&#x27; ? &#x27;-52px&#x27; : &#x27;0px&#x27; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">.<span class="property">drawing</span>-panel &#123;</span><br><span class="line">  z-<span class="attr">index</span>: <span class="number">999</span>;</span><br><span class="line">  <span class="attr">position</span>: absolute;</span><br><span class="line">  <span class="attr">top</span>: 14rem;</span><br><span class="line">  margin-<span class="attr">left</span>: <span class="number">2.</span>5rem;</span><br><span class="line">  padding-<span class="attr">left</span>: <span class="number">0</span>;</span><br><span class="line">  border-<span class="attr">radius</span>: .25rem;</span><br><span class="line">  <span class="attr">height</span>: 47px;</span><br><span class="line">  box-<span class="attr">shadow</span>: <span class="number">0</span> 2px 6px <span class="number">0</span> <span class="title function_">rgba</span>(<span class="number">27</span>, <span class="number">142</span>, <span class="number">236</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">bmap</span>-btn &#123;</span><br><span class="line">  border-<span class="attr">right</span>: 1px solid #d2d2d2;</span><br><span class="line">  <span class="attr">float</span>: left;</span><br><span class="line">  <span class="attr">width</span>: 64px;</span><br><span class="line">  <span class="attr">height</span>: <span class="number">100</span>%;</span><br><span class="line">  background-<span class="attr">image</span>: <span class="title function_">url</span>(<span class="comment">//api.map.baidu.com/library/DrawingManager/1.4/src/bg_drawing_tool.png);</span></span><br><span class="line">  <span class="attr">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">drawing</span>-panel .<span class="property">bmap</span>-marker &#123;</span><br><span class="line">  background-<span class="attr">position</span>: -65px <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">drawing</span>-panel .<span class="property">bmap</span>-polyline &#123;</span><br><span class="line">  background-<span class="attr">position</span>: -195px <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">drawing</span>-panel .<span class="property">bmap</span>-rectangle &#123;</span><br><span class="line">  background-<span class="attr">position</span>: -325px <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">drawing</span>-panel .<span class="property">bmap</span>-polygon &#123;</span><br><span class="line">  background-<span class="attr">position</span>: -260px <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">drawing</span>-panel .<span class="property">bmap</span>-circle &#123;</span><br><span class="line">  background-<span class="attr">position</span>: -130px <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>结构搭完效果如下：<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/sl2.jpg"
                      alt="辅助工具BMapGLLib"
                ></p>
<h3 id="3-2、js逻辑部分"><a href="#3-2、js逻辑部分" class="headerlink" title="3-2、js逻辑部分"></a>3-2、js逻辑部分</h3><p>上面地图初始完后就能使用鼠标绘制工具进行需求的绘制<br>（1）实例化鼠标绘制工具</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">draw</span>(<span class="params">drawingType</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(drawingType, <span class="string">&#x27;666&#x27;</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">actNav</span> = drawingType</span><br><span class="line">  <span class="comment">/**这里看需求可以把它设置为全局变量。</span></span><br><span class="line"><span class="comment">  *我这里需求需要，故设置了全局变量，以下代码就注释掉了*/</span></span><br><span class="line">  <span class="comment">// const styleOptions = &#123;</span></span><br><span class="line">  <span class="comment">//   strokeColor: &#x27;#5E87DB&#x27;,   // 边线颜色</span></span><br><span class="line">  <span class="comment">//   fillColor: &#x27;#5E87DB&#x27;,     // 填充颜色。当参数为空时，圆形没有填充颜色</span></span><br><span class="line">  <span class="comment">//   strokeWeight: 2,          // 边线宽度，以像素为单位</span></span><br><span class="line">  <span class="comment">//   strokeOpacity: 1,         // 边线透明度，取值范围0-1</span></span><br><span class="line">  <span class="comment">//   fillOpacity: 0.2          // 填充透明度，取值范围0-1</span></span><br><span class="line">  <span class="comment">// &#125;;</span></span><br><span class="line">  <span class="comment">// const labelOptions = &#123;</span></span><br><span class="line">  <span class="comment">//   borderRadius: &#x27;2px&#x27;,</span></span><br><span class="line">  <span class="comment">//   background: &#x27;#FFFBCC&#x27;,</span></span><br><span class="line">  <span class="comment">//   border: &#x27;1px solid #E1E1E1&#x27;,</span></span><br><span class="line">  <span class="comment">//   color: &#x27;#703A04&#x27;,</span></span><br><span class="line">  <span class="comment">//   fontSize: &#x27;12px&#x27;,</span></span><br><span class="line">  <span class="comment">//   letterSpacing: &#x27;0&#x27;,</span></span><br><span class="line">  <span class="comment">//   padding: &#x27;5px&#x27;</span></span><br><span class="line">  <span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 实例化鼠标绘制工具</span></span><br><span class="line">  <span class="keyword">const</span> drawingManager = <span class="keyword">new</span> <span class="title class_">BMapGLLib</span>.<span class="title class_">DrawingManager</span>(<span class="variable language_">this</span>.<span class="property">map</span>, &#123;</span><br><span class="line">    <span class="comment">//isOpen: true,        // 是否开启绘制模式</span></span><br><span class="line">    <span class="attr">enableCalculate</span>: <span class="literal">false</span>, <span class="comment">// 绘制是否进行测距测面</span></span><br><span class="line">    <span class="attr">enableSorption</span>: <span class="literal">true</span>, <span class="comment">// 是否开启边界吸附功能</span></span><br><span class="line">    <span class="attr">sorptiondistance</span>: <span class="number">20</span>, <span class="comment">// 边界吸附距离</span></span><br><span class="line">    <span class="attr">circleOptions</span>: <span class="variable language_">this</span>.<span class="property">styleOptions</span>, <span class="comment">// 圆的样式</span></span><br><span class="line">    <span class="attr">polylineOptions</span>: <span class="variable language_">this</span>.<span class="property">styleOptions</span>, <span class="comment">// 线的样式</span></span><br><span class="line">    <span class="attr">polygonOptions</span>: <span class="variable language_">this</span>.<span class="property">styleOptions</span>, <span class="comment">// 多边形的样式</span></span><br><span class="line">    <span class="attr">rectangleOptions</span>: <span class="variable language_">this</span>.<span class="property">styleOptions</span>, <span class="comment">// 矩形的样式</span></span><br><span class="line">    <span class="attr">labelOptions</span>: <span class="variable language_">this</span>.<span class="property">labelOptions</span>,  <span class="comment">// label样式</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 进行绘制</span></span><br><span class="line">  <span class="keyword">if</span> (drawingManager.<span class="property">_isOpen</span> &amp;&amp; drawingManager.<span class="title function_">getDrawingMode</span>() === drawingType) &#123;</span><br><span class="line">    drawingManager.<span class="title function_">close</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    drawingManager.<span class="title function_">setDrawingMode</span>(drawingType);</span><br><span class="line">    drawingManager.<span class="title function_">open</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/** 我这里需求是圆形和矩形还有点的标注，</span></span><br><span class="line"><span class="comment">  *还有两种就没有写它的监听事件，也是差不多的，</span></span><br><span class="line"><span class="comment">  *可以对照一下官方api和我写的就基本上差不多了，</span></span><br><span class="line"><span class="comment">  *如果有谁需要，我有时间也可以继续把剩下两种监听事件补上 */</span></span><br><span class="line">  <span class="comment">// 监听事件</span></span><br><span class="line">  <span class="keyword">if</span> (drawingType == <span class="string">&#x27;rectangle&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 监听矩形绘制完成事件</span></span><br><span class="line">    drawingManager.<span class="title function_">addEventListener</span>(<span class="string">&quot;overlaycomplete&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 获取矩形对象</span></span><br><span class="line">      <span class="keyword">const</span> rectangle = e.<span class="property">overlay</span>;</span><br><span class="line">      <span class="comment">// 获取矩形的四个顶点</span></span><br><span class="line">      <span class="keyword">const</span> points = rectangle.<span class="title function_">getPath</span>();</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(points, <span class="string">&quot;顶点&quot;</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">scope_point</span> = points;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (drawingType == <span class="string">&#x27;circle&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 监听圆形绘制完成事件</span></span><br><span class="line">    drawingManager.<span class="title function_">addEventListener</span>(<span class="string">&quot;overlaycomplete&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 获取圆形对象</span></span><br><span class="line">      <span class="keyword">const</span> circle = e.<span class="property">overlay</span>;</span><br><span class="line">      <span class="comment">// 获取圆形的圆心</span></span><br><span class="line">      <span class="keyword">const</span> center = circle.<span class="title function_">getCenter</span>();</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(center, <span class="string">&quot;圆心&quot;</span>);</span><br><span class="line">      <span class="comment">// 获取圆形的半径</span></span><br><span class="line">      <span class="keyword">const</span> radius = circle.<span class="title function_">getRadius</span>();</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(radius, <span class="string">&quot;半径&quot;</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">scope_point</span> = center;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">scope_radius</span> = radius;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (drawingType == <span class="string">&#x27;marker&#x27;</span>) &#123;</span><br><span class="line">    drawingManager.<span class="title function_">addEventListener</span>(<span class="string">&quot;overlaycomplete&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 获取标注对象</span></span><br><span class="line">      <span class="keyword">const</span> marker = e.<span class="property">overlay</span>;</span><br><span class="line">      <span class="comment">// 获取标注的经纬度坐标</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">point</span> = marker.<span class="title function_">getPosition</span>();</span><br><span class="line">      <span class="comment">// 创建地理编码服务实例</span></span><br><span class="line">      <span class="keyword">const</span> geocoder = <span class="keyword">new</span> <span class="title class_">BMapGL</span>.<span class="title class_">Geocoder</span>();</span><br><span class="line">      <span class="comment">// 将经纬度坐标解析为地址信息</span></span><br><span class="line">      geocoder.<span class="title function_">getLocation</span>(<span class="variable language_">this</span>.<span class="property">point</span>, <span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">newForm</span>.<span class="property">address</span> = result.<span class="property">address</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">point</span>, result.<span class="property">address</span>, <span class="string">&quot;地址&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></div>

<p>效果如图所示（我只需要这三种，其他注释掉了）：<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/sl3.jpg"
                      alt="BMapGL鼠标绘制功能"
                ></p>
<h2 id="4、在项目中使用BMap实例"><a href="#4、在项目中使用BMap实例" class="headerlink" title="4、在项目中使用BMap实例"></a>4、在项目中使用BMap实例</h2><p><strong>注意：</strong><br>大坑来啦！！！ BMapGL 类创建的地图实例不支持 addOverlay 方法,并且还不支持直接使用鼠标绘制工具（BMapLib.DrawingManager 类）在地图上绘制矩形框,故只能换成BMap)写完才知道，只能硬着头皮往下写，因为我需要展示出刚刚画的那些标注。。。<br>（1）重新初始化一个地图实例（BMap）</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">map</span> = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Map</span>(<span class="variable language_">this</span>.<span class="property">mapId</span>, &#123; <span class="attr">enableMapClick</span>: <span class="literal">false</span> &#125;);</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">centerAndZoom</span>(<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(point_location[<span class="number">1</span>], point_location[<span class="number">0</span>]), <span class="number">11</span>)      <span class="comment">// 初始化地图,设置中心点坐标和地图级别我这里的point_location是后台返回的坐标，跟上面的类似</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">enableScrollWheelZoom</span>(<span class="literal">true</span>)<span class="comment">// 开启鼠标滚轮缩放</span></span><br></pre></td></tr></table></figure></div>
<p>（2）创建标记点</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建标记点的坐标</span></span><br><span class="line"><span class="keyword">const</span> point = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(point_location[<span class="number">1</span>], point_location[<span class="number">0</span>]);<span class="comment">//point_location后台返回字段</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(point, <span class="string">&quot;坐标&quot;</span>)</span><br><span class="line"><span class="comment">// 创建标记点对象</span></span><br><span class="line"><span class="keyword">const</span> marker = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Marker</span>(point);</span><br><span class="line"><span class="comment">// 将标记点添加到地图上</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">addOverlay</span>(marker);</span><br></pre></td></tr></table></figure></div>
<p>（3）创建矩形框对象</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建矩形框对象</span></span><br><span class="line"> <span class="keyword">const</span> rectangle = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Polygon</span>([</span><br><span class="line">   <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="variable language_">this</span>.<span class="property">rectangle</span>[<span class="number">3</span>], <span class="variable language_">this</span>.<span class="property">rectangle</span>[<span class="number">2</span>]), <span class="comment">//rectangle后台返回的坐标</span></span><br><span class="line">   <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="variable language_">this</span>.<span class="property">rectangle</span>[<span class="number">5</span>], <span class="variable language_">this</span>.<span class="property">rectangle</span>[<span class="number">4</span>]),</span><br><span class="line">   <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="variable language_">this</span>.<span class="property">rectangle</span>[<span class="number">7</span>], <span class="variable language_">this</span>.<span class="property">rectangle</span>[<span class="number">6</span>]),</span><br><span class="line">   <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="variable language_">this</span>.<span class="property">rectangle</span>[<span class="number">9</span>], <span class="variable language_">this</span>.<span class="property">rectangle</span>[<span class="number">8</span>]),</span><br><span class="line"> ], <span class="variable language_">this</span>.<span class="property">styleOptions</span>); <span class="comment">//styleOptions之前的全局变量</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 将矩形框添加到地图上</span></span><br><span class="line"> <span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">addOverlay</span>(rectangle);</span><br><span class="line"> <span class="comment">// 设置地图视野，使得矩形框完全显示在地图视野内</span></span><br><span class="line"> <span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">setViewport</span>(rectangle.<span class="title function_">getPath</span>());</span><br></pre></td></tr></table></figure></div>
<p>（4）创建圆形对象</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建圆心坐标</span></span><br><span class="line"><span class="keyword">const</span> center = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="variable language_">this</span>.<span class="property">rectangle</span>[<span class="number">1</span>], <span class="variable language_">this</span>.<span class="property">rectangle</span>[<span class="number">0</span>]);<span class="comment">//rectangle后台返回的圆形坐标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建圆形标注对象</span></span><br><span class="line"><span class="keyword">const</span> circle = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Circle</span>(center, <span class="variable language_">this</span>.<span class="property">scope_radius</span>, <span class="variable language_">this</span>.<span class="property">styleOptions</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将圆形标注添加到地图上</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">addOverlay</span>(circle);</span><br></pre></td></tr></table></figure></div>

<h2 id="5、打完收工，下班！！！"><a href="#5、打完收工，下班！！！" class="headerlink" title="5、打完收工，下班！！！"></a>5、打完收工，下班！！！<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/bqb.jpg"
                      alt="下班！"
                ></h2>]]></content>
      <categories>
        <category>功能实现</category>
      </categories>
      <tags>
        <tag>vue项目</tag>
      </tags>
  </entry>
  <entry>
    <title>vue2项目给对象属性赋值不触发dom更新的问题及解决方案</title>
    <url>/2023/06/15/vue%E9%A1%B9%E7%9B%AE%E7%BB%99%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC%E4%B8%8D%E8%A7%A6%E5%8F%91dom%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<h3 id="记录一下今天上班实战开发遇到的一个问题-从一个子组件里面选择一条数据带到父组件-并给父组件里的data里面的对象进行属性赋值修改-发现并没有触发dom更新。"><a href="#记录一下今天上班实战开发遇到的一个问题-从一个子组件里面选择一条数据带到父组件-并给父组件里的data里面的对象进行属性赋值修改-发现并没有触发dom更新。" class="headerlink" title="记录一下今天上班实战开发遇到的一个问题,从一个子组件里面选择一条数据带到父组件,并给父组件里的data里面的对象进行属性赋值修改,发现并没有触发dom更新。"></a>记录一下今天上班实战开发遇到的一个问题,从一个子组件里面选择一条数据带到父组件,并给父组件里的data里面的对象进行属性赋值修改,发现并没有触发dom更新。</h3><h3 id="旨在记录，有不足之处请多多指教。"><a href="#旨在记录，有不足之处请多多指教。" class="headerlink" title="旨在记录，有不足之处请多多指教。"></a>旨在记录，有不足之处请多多指教。</h3><p>问题代码如下:</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">clickChange</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">dataForm</span>, <span class="string">&#x27;cg_contract_id&#x27;</span>, e.<span class="property">main_id</span>);</span><br><span class="line">    <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">dataForm</span>, <span class="string">&#x27;source_no&#x27;</span>, e.<span class="property">serial_number</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e,<span class="variable language_">this</span>.<span class="property">dataForm</span>,  <span class="string">&#x27;数据&#x27;</span>);<span class="comment">//第一次点击时发现是正常赋值,再继续点击这里打印赋值也是正常的,但是dom就是没有发生变化</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div>

<p>这就让我有点纳闷,后面查了下问题应该出现在这:Vue 执行 DOM 更新是异步的，只要观察到数据变化，Vue 就开始一个队列，将同一事件循环内所有的数据变化缓存起来。如果一个 watcher 被多次触发，只会推入一次到队列中。然后，在接下来的事件循环中，Vue 刷新队列并仅执行必要的 DOM 更新。Vue对于响应式属性的更新是异步执行的，可能会导致在部分情况下看不到立即的更新效果。</p>
<p>第一种解决方案:</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// this.$forceUpdate</span></span><br><span class="line"><span class="title function_">clickChange</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">dataForm</span>, <span class="string">&#x27;cg_contract_id&#x27;</span>, e.<span class="property">main_id</span>);</span><br><span class="line">    <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">dataForm</span>, <span class="string">&#x27;source_no&#x27;</span>, e.<span class="property">serial_number</span>);</span><br><span class="line">    <span class="variable language_">this</span>.$forceUpdate();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e,<span class="variable language_">this</span>.<span class="property">dataForm</span>,  <span class="string">&#x27;数据&#x27;</span>);<span class="comment">//此时dom和数据都显示一致了</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div>

<p>第二种解决方案: </p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用深度克隆</span></span><br><span class="line"><span class="title function_">clickChange</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">//深度克隆可以引用库或者自己封装一个,这里就不多赘述</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">dataForm</span> = <span class="title function_">cloneDeep</span>(<span class="variable language_">this</span>.<span class="property">dataForm</span>);</span><br><span class="line">    <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">dataForm</span>, <span class="string">&#x27;cg_contract_id&#x27;</span>, e.<span class="property">main_id</span>);</span><br><span class="line">    <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">dataForm</span>, <span class="string">&#x27;source_no&#x27;</span>, e.<span class="property">serial_number</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e,<span class="variable language_">this</span>.<span class="property">dataForm</span>);<span class="comment">//此时dom和数据都显示一致了</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div>

<p>这里的两种方法都可以,但是更推荐第一种,深度克隆的方式相当于创建了一个全新的对象，即使它的内容与原始对象相同，但它不再与 Vue 的响应式系统产生关联。</p>
]]></content>
      <categories>
        <category>踩坑日记</category>
      </categories>
      <tags>
        <tag>vue项目</tag>
      </tags>
  </entry>
  <entry>
    <title>vue项目实现el-popover弹窗拖拽位置以及实现弹窗的拖拽调整大小功能</title>
    <url>/2023/07/01/vue%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0el-popover%E5%BC%B9%E7%AA%97%E6%8B%96%E6%8B%BD%E4%BB%A5%E5%8F%8A%E6%8B%96%E5%8A%A8%E8%BE%B9%E6%A1%86%E5%AE%9E%E7%8E%B0%E5%BC%B9%E6%A1%86%E6%8B%96%E5%A4%A7%E6%8B%96%E5%B0%8F/</url>
    <content><![CDATA[<h4 id="记录一下vue项目实现el-popover弹窗拖拽以及拖动边框实现弹框拖大拖小。旨在记录，不足之处请多多指教。"><a href="#记录一下vue项目实现el-popover弹窗拖拽以及拖动边框实现弹框拖大拖小。旨在记录，不足之处请多多指教。" class="headerlink" title="记录一下vue项目实现el-popover弹窗拖拽以及拖动边框实现弹框拖大拖小。旨在记录，不足之处请多多指教。"></a>记录一下vue项目实现el-popover弹窗拖拽以及拖动边框实现弹框拖大拖小。旨在记录，不足之处请多多指教。</h4><h2 id="1、popover弹窗拖拽的实现"><a href="#1、popover弹窗拖拽的实现" class="headerlink" title="1、popover弹窗拖拽的实现"></a>1、popover弹窗拖拽的实现</h2><p>具体实现的步骤如下：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自定义指令，名为&quot;popover&quot;，用于实现拖拽功能,要使用的组件直接v-popover</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;popover&#x27;</span>, &#123;</span><br><span class="line">  <span class="title function_">bind</span>(<span class="params">el, binding, vnode, oldVnode</span>) &#123;</span><br><span class="line">      <span class="comment">// 1、在bind钩子函数中获取弹窗标题栏元素(dialogHeaderEl)、弹窗底部元素(dialogFootEl)和弹窗内容元素(dragDom)。</span></span><br><span class="line">      <span class="keyword">const</span> dialogHeaderEl = el.<span class="title function_">querySelector</span>(<span class="string">&#x27;.el-pagination&#x27;</span>); <span class="comment">// 获取弹窗标题栏元素</span></span><br><span class="line">      <span class="keyword">const</span> dragDom = el.<span class="title function_">querySelector</span>(<span class="string">&#x27;.el-popover&#x27;</span>); <span class="comment">// 获取弹窗内容元素</span></span><br><span class="line">      <span class="keyword">const</span> that=vnode.<span class="property">context</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 2、判断是否成功获取到弹窗内容元素，若未获取到则不绑定拖拽功能。</span></span><br><span class="line">      <span class="keyword">if</span>(!dragDom) <span class="keyword">return</span>; <span class="comment">// 如果没有找到弹窗内容元素，则不绑定拖拽</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3、获取弹窗内容元素的样式属性(sty)，包括位置等信息。</span></span><br><span class="line">      <span class="comment">// 获取弹窗内容元素的样式属性</span></span><br><span class="line">      <span class="keyword">const</span> sty = dragDom.<span class="property">currentStyle</span> || <span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(dragDom, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 4、定义moveDown函数，该函数用于处理鼠标按下事件，实现拖拽效果。</span></span><br><span class="line">      <span class="keyword">const</span> <span class="title function_">moveDown</span>= (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">          <span class="comment">// 鼠标按下，计算当前元素距离可视区的距离</span></span><br><span class="line">          <span class="keyword">const</span> disX = e.<span class="property">clientX</span> - dialogHeaderEl.<span class="property">offsetLeft</span>;</span><br><span class="line">          <span class="keyword">const</span> disY = e.<span class="property">clientY</span> - dialogHeaderEl.<span class="property">offsetTop</span>;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 获取到的值带px 正则匹配替换</span></span><br><span class="line">          <span class="keyword">let</span> styL, styT;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 注意在ie中 第一次获取到的值为组件自带50% 移动之后赋值为px</span></span><br><span class="line">          <span class="keyword">if</span>(sty.<span class="property">left</span>.<span class="title function_">includes</span>(<span class="string">&#x27;%&#x27;</span>)) &#123;</span><br><span class="line">              styL = +<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientWidth</span> * (+sty.<span class="property">left</span>.<span class="title function_">replace</span>(<span class="regexp">/\%/g</span>, <span class="string">&#x27;&#x27;</span>) / <span class="number">100</span>);</span><br><span class="line">              styT = +<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientHeight</span> * (+sty.<span class="property">top</span>.<span class="title function_">replace</span>(<span class="regexp">/\%/g</span>, <span class="string">&#x27;&#x27;</span>) / <span class="number">100</span>);</span><br><span class="line">          &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">              styL = +sty.<span class="property">left</span>.<span class="title function_">replace</span>(<span class="regexp">/\px/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">              styT = +sty.<span class="property">top</span>.<span class="title function_">replace</span>(<span class="regexp">/\px/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 5、在document.onmousemove事件处理函数中计算当前元素的移动距离，并限制移动范围在窗口可视区域内。</span></span><br><span class="line">          <span class="variable language_">document</span>.<span class="property">onmousemove</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">              <span class="comment">// 通过事件委托，计算移动的距离</span></span><br><span class="line">              <span class="keyword">let</span> l = e.<span class="property">clientX</span> - disX + styL;</span><br><span class="line">              <span class="keyword">let</span> t = e.<span class="property">clientY</span> - disY + styT;</span><br><span class="line"></span><br><span class="line">              <span class="comment">// 设置边界限制</span></span><br><span class="line">              <span class="keyword">let</span> minL=-((<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span>-dragDom.<span class="property">offsetWidth</span>)*<span class="number">0.5</span>+dragDom.<span class="property">offsetWidth</span>-<span class="number">50</span>)</span><br><span class="line">              <span class="keyword">let</span> maxL=(<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span>-dragDom.<span class="property">offsetWidth</span>)*<span class="number">0.5</span>+dragDom.<span class="property">offsetWidth</span>-<span class="number">50</span></span><br><span class="line">              <span class="keyword">let</span> minT=-<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>*<span class="number">0.1</span></span><br><span class="line">              <span class="keyword">let</span> maxT=<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span> - dragDom.<span class="property">offsetHeight</span>-<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>*<span class="number">0.1</span>+dragDom.<span class="property">offsetHeight</span>-<span class="number">50</span></span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (l &lt;= minL) &#123;</span><br><span class="line">                l = minL</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (l &gt;=maxL )&#123;</span><br><span class="line">                l = maxL</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (t &lt;=minT ) &#123;</span><br><span class="line">                t = minT;</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= maxT)&#123;</span><br><span class="line">                t = maxT</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              t = t &gt; minT ? t : minT;</span><br><span class="line"></span><br><span class="line">              <span class="comment">// 移动当前元素</span></span><br><span class="line">              dragDom.<span class="property">style</span>.<span class="property">left</span> = <span class="string">`<span class="subst">$&#123;l&#125;</span>px`</span>;</span><br><span class="line">              dragDom.<span class="property">style</span>.<span class="property">top</span> = <span class="string">`<span class="subst">$&#123;t&#125;</span>px`</span>;</span><br><span class="line"></span><br><span class="line">              <span class="comment">//将此时的位置传出去</span></span><br><span class="line">              <span class="comment">//binding.value(&#123;x:e.pageX,y:e.pageY&#125;)</span></span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 6、在document.onmouseup事件处理函数中清除事件监听，结束拖拽操作。</span></span><br><span class="line">          <span class="variable language_">document</span>.<span class="property">onmouseup</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">              <span class="variable language_">document</span>.<span class="property">onmousemove</span> = <span class="literal">null</span>;</span><br><span class="line">              <span class="variable language_">document</span>.<span class="property">onmouseup</span> = <span class="literal">null</span>;</span><br><span class="line">          &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 7、将moveDown函数绑定到弹窗标题栏元素的onmousedown事件上，当鼠标按下标题栏时触发拖拽。</span></span><br><span class="line">      dialogHeaderEl.<span class="property">onmousedown</span>=moveDown;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="2、popover弹窗拖拽调整大小功能的实现"><a href="#2、popover弹窗拖拽调整大小功能的实现" class="headerlink" title="2、popover弹窗拖拽调整大小功能的实现"></a>2、popover弹窗拖拽调整大小功能的实现</h2><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 自定义指令名为&quot;popoverDragWidth&quot;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;popoverDragWidth&#x27;</span>, &#123;</span><br><span class="line">  <span class="title function_">bind</span>(<span class="params">el, binding, vnode, oldVnode</span>) &#123;</span><br><span class="line">    <span class="comment">// 定义最小高度和最小宽度</span></span><br><span class="line">    <span class="keyword">const</span> minH = <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">const</span> minW = <span class="number">500</span>;</span><br><span class="line">    <span class="comment">// 定义边框大小</span></span><br><span class="line">    <span class="keyword">const</span> borderSize = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 初始化起始位置和尺寸</span></span><br><span class="line">    <span class="keyword">let</span> startX = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> startY = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> startWidth = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> startHeight = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 获取弹窗内容元素</span></span><br><span class="line">    <span class="keyword">const</span> dragDom = el.<span class="title function_">querySelector</span>(<span class="string">&#x27;.el-popover&#x27;</span>);</span><br><span class="line">    <span class="comment">// 初始化是否正在调整大小的标志</span></span><br><span class="line">    <span class="keyword">let</span> isResizing = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 获取Vue实例对象</span></span><br><span class="line">    <span class="keyword">const</span> that = vnode.<span class="property">context</span>;</span><br><span class="line">    <span class="comment">// 定义垂直和水平调整大小的光标样式</span></span><br><span class="line">    <span class="keyword">const</span> handleCursorVertical = <span class="string">&quot;ns-resize&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> handleCursorHorizontal = <span class="string">&quot;ew-resize&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置初始光标样式为垂直调整大小</span></span><br><span class="line">    dragDom.<span class="property">style</span>.<span class="property">cursor</span> = <span class="string">&#x27;ns-resize&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听鼠标移动事件，根据光标位置确定光标样式，并修改调整大小标志</span></span><br><span class="line">    dragDom.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> h = dragDom.<span class="property">clientHeight</span>, w = dragDom.<span class="property">clientWidth</span>;</span><br><span class="line">        <span class="keyword">let</span> isOnHorizontalBorder = w - e.<span class="property">offsetX</span> &lt; borderSize, isOnVerticalBorder = h - e.<span class="property">offsetY</span> &lt; borderSize;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据光标位置设置光标样式</span></span><br><span class="line">        <span class="keyword">if</span> (isOnHorizontalBorder) dragDom.<span class="property">style</span>.<span class="property">cursor</span> = handleCursorHorizontal;</span><br><span class="line">        <span class="keyword">if</span> (isOnVerticalBorder)  dragDom.<span class="property">style</span>.<span class="property">cursor</span> = handleCursorVertical;</span><br><span class="line">        <span class="keyword">if</span> (isOnHorizontalBorder &amp;&amp; isOnVerticalBorder) dragDom.<span class="property">style</span>.<span class="property">cursor</span> = <span class="string">&#x27;crosshair&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!isOnHorizontalBorder &amp;&amp; !isOnVerticalBorder) dragDom.<span class="property">style</span>.<span class="property">cursor</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 修改调整大小标志</span></span><br><span class="line">        <span class="keyword">if</span> (isOnHorizontalBorder || isOnVerticalBorder) isResizing = <span class="literal">true</span>;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听鼠标按下事件，保存起始位置和尺寸，并添加鼠标移动和鼠标释放事件监听器</span></span><br><span class="line">    dragDom.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousedown&quot;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 获取弹窗内容元素的位置和尺寸信息</span></span><br><span class="line">      <span class="keyword">const</span> rect = dragDom.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">      startX = e.<span class="property">clientX</span>;</span><br><span class="line">      startY = e.<span class="property">clientY</span>;</span><br><span class="line">      startWidth = rect.<span class="property">width</span>;</span><br><span class="line">      startHeight = rect.<span class="property">height</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 如果不处于调整大小状态，直接返回</span></span><br><span class="line">      <span class="keyword">if</span>(!isResizing) <span class="keyword">return</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 添加鼠标移动和鼠标释放事件监听器</span></span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousemove&quot;</span>, resizeWidthHeight, <span class="literal">false</span>);</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;mouseup&quot;</span>, removeResize, <span class="literal">false</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调整元素的宽度和高度</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">resizeWidthHeight</span>(<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!isResizing) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 计算新的宽度和高度</span></span><br><span class="line">      <span class="keyword">let</span> width = startWidth + e.<span class="property">clientX</span> - startX;</span><br><span class="line">      <span class="keyword">let</span> height = startHeight + e.<span class="property">clientY</span> - startY;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 如果宽度小于最小宽度，则使用最小宽度</span></span><br><span class="line">      <span class="keyword">if</span>(width &lt; minW) width = minW;</span><br><span class="line">      <span class="comment">// 如果高度小于最小高度，则使用最小高度</span></span><br><span class="line">      <span class="keyword">if</span>(height &lt; minH) height = minH;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 设置元素的新宽度和高度</span></span><br><span class="line">      dragDom.<span class="property">style</span>.<span class="property">width</span> = <span class="string">`<span class="subst">$&#123;width&#125;</span>px`</span>;</span><br><span class="line">      dragDom.<span class="property">style</span>.<span class="property">height</span> = <span class="string">`<span class="subst">$&#123;height&#125;</span>px`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移除调整大小事件监听器，并重置光标样式，并通过 Vue 实例传递元素新的尺寸信息</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">removeResize</span>(<span class="params"></span>) &#123;</span><br><span class="line">      isResizing = <span class="literal">false</span>;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;mousemove&quot;</span>, resizeWidthHeight, <span class="literal">false</span>);</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;mouseup&quot;</span>, removeResize, <span class="literal">false</span>);</span><br><span class="line">      dragDom.<span class="property">style</span>.<span class="property">cursor</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 如果存在 setTablewH 方法，则调用该方法并传递元素位置和尺寸信息</span></span><br><span class="line">      that.<span class="property">setTablewH</span> &amp;&amp; that.<span class="title function_">setTablewH</span>(dragDom.<span class="title function_">getBoundingClientRect</span>());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<p>具体实现的步骤如下：</p>
<p>1、在bind钩子函数中，定义最小高度(minH)和最小宽度(minW)的值，以及边框大小(borderSize)。<br>2、初始化起始位置和尺寸的变量，用于记录拖拽调整大小的起始状态。<br>3、获取弹窗内容元素(dragDom)。<br>4、初始化是否正在调整大小的标志(isResizing)。<br>5、获取Vue实例对象(that)。<br>6、定义垂直和水平调整大小的光标样式(handleCursorVertical和handleCursorHorizontal)。<br>7、设置初始光标样式为垂直调整大小。<br>8、监听鼠标移动事件，根据光标位置确定光标样式，并修改调整大小标志。<br>9、监听鼠标按下事件，保存起始位置和尺寸，并添加鼠标移动和鼠标释放事件监听器。<br>10、在鼠标移动事件处理函数resizeWidthHeight中计算新的宽度和高度，并限制最小宽度和最小高度。<br>11、在鼠标释放事件处理函数removeResize中移除调整大小事件监听器，重置光标样式，并通过Vue实例方法setTablewH传12、递元素新的位置和尺寸信息。</p>
]]></content>
      <categories>
        <category>功能实现</category>
      </categories>
      <tags>
        <tag>vue项目</tag>
      </tags>
  </entry>
</search>
